{"version":3,"sources":["scripts/main.js"],"names":["promise","getPhones","phoneList","firstThreeElemArray","url","Promise","resolve","reject","fetch","then","response","json","lists","setTimeout","Error","getArrayOfIds","array","map","id","getFirstReceivedDetails","arrayOfIds","requests","race","firstPhoneDetail","div","document","createElement","className","innerHTML","name","body","append","catch","getAllSuccessfulDetails","allSettled","results","fullfilElem","filter","elem","status","ul","li","innerText","value","getThreeFastestDetails","forEach","element","result","length","push","list"],"mappings":"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","file":"main.92150b7d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst promise = getPhones(\n  'https://mate-academy.github.io/'\n+ 'phone-catalogue-static/api/phones.json');\nconst phoneList = [];\nconst firstThreeElemArray = [];\n\nfunction getPhones(url) {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => response.json())\n      .then(lists => resolve(lists));\n\n    setTimeout(() => reject(new Error()), 5000);\n  });\n}\n\npromise\n  .then(list => {\n    for (const elem of list) {\n      phoneList.push(elem.id);\n    };\n    getFirstReceivedDetails(phoneList);\n    getAllSuccessfulDetails(phoneList);\n    getThreeFastestDetails(phoneList);\n  })\n  .catch(new Error('error!'));\n\nfunction getArrayOfIds(array) {\n  return array.map(id => {\n    return fetch(\n      `https://mate-academy.github.io/`\n    + `phone-catalogue-static/api/phones/${id}.json`)\n      .then(response => response.json());\n  });\n}\n\nfunction getFirstReceivedDetails(arrayOfIds) {\n  const requests = getArrayOfIds(arrayOfIds);\n\n  Promise.race(requests)\n    .then(firstPhoneDetail => {\n      const div = document.createElement('div');\n\n      div.className = 'first-received';\n\n      div.innerHTML = `\n        <h1>First Received</h1>\n        <ul>\n          <li>id: ${firstPhoneDetail.id}, name: ${firstPhoneDetail.name}</li>\n        </ul>`;\n      document.body.append(div);\n    })\n    .catch(new Error('error!'));\n};\n\nfunction getAllSuccessfulDetails(arrayOfIds) {\n  const requests = getArrayOfIds(arrayOfIds);\n\n  Promise.allSettled(requests)\n    .then(results => {\n      const fullfilElem = results.filter(elem => elem.status === 'fulfilled');\n\n      const div = document.createElement('div');\n\n      div.className = 'all-successful';\n\n      div.innerHTML = '<h1>All Successful</h1>';\n\n      const ul = document.createElement('ul');\n\n      div.append(ul);\n\n      document.body.append(div);\n\n      for (const elem of fullfilElem) {\n        const li = document.createElement('li');\n\n        li.innerText = `id: ${elem.value.id}, name: ${elem.value.name}`;\n        ul.append(li);\n      };\n    })\n    .catch(new Error('error!'));\n};\n\nfunction getThreeFastestDetails(arrayOfIds) {\n  arrayOfIds.forEach(element => {\n    fetch(\n      `https://mate-academy.github.io/`\n    + `phone-catalogue-static/api/phones/${element}.json`)\n      .then(response => response.json())\n      .then(result => {\n        if (firstThreeElemArray.length <= 2) {\n          firstThreeElemArray.push(result);\n        }\n      });\n  });\n};\n"]}